{
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[go]": {
        "editor.semanticHighlighting.enabled": false
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[java]": {
        "editor.suggest.snippetsPreventQuickSuggestions": false
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.semanticHighlighting.enabled": false
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.semanticHighlighting.enabled": false
    },
    "[markdown]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "files.trimFinalNewlines": false,
        "files.trimTrailingWhitespace": false,
        "editor.pasteAs.enabled": true
    },
    "[yaml]": {
        "editor.autoIndent": "keep",
        "editor.defaultFormatter": "redhat.vscode-yaml",
        "editor.formatOnSave": false,
        "editor.insertSpaces": true,
        "editor.tabSize": 2
    },
    "[csharp]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.semanticHighlighting.enabled": true
    },
    "editor.semanticTokenColorCustomizations": {
        "rules": {
            "variable.local.readonly:typescriptreact": "#C0C0C0"
        }
    },
    "editor.tokenColorCustomizations": {
        "[IrishBruse's Dark Theme(Green)]": {
            "textMateRules": [
                {
                    "scope": [
                        "variable.other.property.go",
                        "source.editorconfig keyword.other.definition"
                    ],
                    "settings": {
                        "foreground": "#9CDCFE"
                    }
                },
                {
                    "scope": [
                        "storage.type.primitive",
                        "keyword.type",
                        "source.editorconfig string",
                        "meta.property-value"
                    ],
                    "settings": {
                        "foreground": "#569CD6"
                    }
                },
                {
                    "scope": [
                        "constant.language.charset",
                        "constant.language.space",
                    ],
                    "settings": {
                        "foreground": "#D7957F"
                    }
                },
                {
                    "scope": [
                        "variable.other.constant.object"
                    ],
                    "settings": {
                        "foreground": "#4EC9B0"
                    }
                },
                {
                    "scope": [],
                    "settings": {
                        "foreground": "#DCDCAA"
                    }
                },
                {
                    "scope": [
                        "support.variable",
                        "string.unquoted.argument.shell"
                    ],
                    "settings": {
                        "foreground": "#C0C0C0"
                    }
                },
                {
                    "scope": [
                        "source.go punctuation.other",
                    ],
                    "settings": {
                        "foreground": "#C94E67"
                    }
                }
            ]
        }
    },
    "workbench.colorCustomizations": {
        "[IrishBruse's Dark Theme(Green)]": {
            "inputOption.activeBackground": "#557d1c",
            "inlineChat.regionHighlight": "#00000000",
            "editorInlayHint.foreground": "#727272",
            "editorInlayHint.parameterForeground": "#727272",
            "editorInlayHint.typeForeground": "#727272",
            "tree.tableColumnsBorder": "#2d3336",
            "diffEditorGutter.insertedLineBackground": "#00000000",
            "diffEditorGutter.removedLineBackground": "#00000000",
            "diffEditorOverview.insertedForeground": "#91b85933",
            "diffEditorOverview.removedForeground": "#e5393544",
            "list.inactiveSelectionBackground": "#384d20b6",
        }
    },
    "explorer.fileNesting.patterns": {
        "//": "Last update at 11/2/2023, 7:06:57 PM",
        "*.asax": "$(capture).*.cs, $(capture).*.vb",
        "*.ascx": "$(capture).*.cs, $(capture).*.vb",
        "*.ashx": "$(capture).*.cs, $(capture).*.vb",
        "*.aspx": "$(capture).*.cs, $(capture).*.vb",
        "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
        "*.c": "$(capture).h",
        "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
        "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.cs": "$(capture).*.cs",
        "*.cshtml": "$(capture).cshtml.cs",
        "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
        "*.css": "$(capture).css.map, $(capture).*.css",
        "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
        "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
        "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
        "*.fs": "$(capture).fs.js, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
        "*.go": "$(capture)_test.go",
        "*.java": "$(capture).class",
        "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
        "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less",
        "*.master": "$(capture).*.cs, $(capture).*.vb",
        "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
        "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
        "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
        "*.pubxml": "$(capture).pubxml.user",
        "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
        "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
        "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
        "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less",
        "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
        "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
        "*.xaml": "$(capture).xaml.cs",
        "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
        "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
        ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
        ".env": "*.env, .env.*, .envrc, env.d.ts",
        ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
        ".project": ".classpath",
        "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
        "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
        "I*.cs": "$(capture).cs",
        "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
        "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
        "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
        "default.nix": "shell.nix",
        "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
        "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
        "flake.nix": "flake.lock",
        "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "gemfile": ".ruby-version, gemfile.lock",
        "go.mod": ".air*, *.env, tygo.yaml, go.sum",
        "go.work": "go.work.sum",
        "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
        "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .release-please*.json, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
        "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
        "pyproject.toml": ".editorconfig, .flake8, .isort.cfg, .pdm-python, .pdm.toml, .python-version, MANIFEST.in, Pipfile, Pipfile.lock, hatch.toml, pdm.lock, poetry.lock, pyproject.toml, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
        "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
        "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
        "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .release-please*.json, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
        "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
        "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
        "shims.d.ts": "*.d.ts",
        "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
        "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*"
    },
    "workbench.editorAssociations": {
        "*.db": "sqlite-viewer.option"
    },
    "files.associations": {
        "*.ib": "go",
        ".air.toml": "ini",
        "*.ldtk": "json"
    },
    "terminal.integrated.automationProfile.linux": {
        "path": "nu.exe"
    },
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": true,
        "scminput": false
    },
    "gopls": {
        "ui.completion.experimentalPostfixCompletions": true,
        "ui.documentation.hoverKind": "SynopsisDocumentation",
        "ui.semanticTokens": false
    },
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
    },
    "cSpell.enableFiletypes": [
        "!python",
        "!jsonc",
        "!json"
    ],
    "files.watcherExclude": {
        "**/bin/**": true,
        "**/obj/**": true
    },
    "files.exclude": {
        "**/obj": true
    },
    "errorLens.enabledDiagnosticLevels": [
        "error",
        "warning"
    ],
    "jupyter.toc.tableOfContentsHeader": "Table of contents",
    "color-highlight.markerType": "underline",
    "color-highlight.markRuler": false,
    "comments.visible": false,
    "csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": true,
    "csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": true,
    "csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": true,
    "debug.autoExpandLazyVariables": true,
    "debug.console.fontFamily": "Cascadia Mono",
    "debug.internalConsoleOptions": "neverOpen",
    "debug.onTaskErrors": "abort",
    "debug.openDebug": "neverOpen",
    "debug.saveBeforeStart": "nonUntitledEditorsInActiveGroup",
    "debug.showInStatusBar": "never",
    "debug.toolBarLocation": "docked",
    "zenMode.hideStatusBar": false,
    "diffEditor.codeLens": false,
    "diffEditor.experimental.showMoves": false,
    "diffEditor.useInlineViewWhenSpaceIsLimited": false,
    "diffEditor.wordWrap": "off",
    "dotnet.inlayHints.enableInlayHintsForLiteralParameters": true,
    "dotnet.inlayHints.enableInlayHintsForOtherParameters": true,
    "dotnet.inlayHints.enableInlayHintsForParameters": true,
    "dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": true,
    "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": true,
    "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": true,
    "dotnet.server.useOmnisharp": true,
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "editor.cursorBlinking": "expand",
    "editor.cursorWidth": 2,
    "editor.experimental.asyncTokenization": true,
    "editor.fastScrollSensitivity": 3,
    "editor.foldingHighlight": false,
    "editor.fontFamily": "Cascadia Code",
    "editor.fontLigatures": true,
    "editor.fontSize": 12,
    "editor.formatOnPaste": false,
    "editor.formatOnSave": true,
    "editor.formatOnType": false,
    "editor.gotoLocation.alternativeImplementationCommand": "editor.action.goToImplementation",
    "editor.gotoLocation.alternativeReferenceCommand": "editor.action.goToImplementation",
    "editor.gotoLocation.multipleDeclarations": "goto",
    "editor.gotoLocation.multipleDefinitions": "goto",
    "editor.gotoLocation.multipleImplementations": "goto",
    "editor.gotoLocation.multipleReferences": "goto",
    "editor.gotoLocation.multipleTypeDefinitions": "goto",
    "editor.guides.bracketPairs": "active",
    "editor.guides.bracketPairsHorizontal": false,
    "editor.guides.highlightActiveIndentation": true,
    "editor.inlayHints.enabled": "onUnlessPressed",
    "editor.inlayHints.padding": true,
    "editor.inlineSuggest.enabled": true,
    "editor.linkedEditing": true,
    "editor.minimap.enabled": false,
    "editor.parameterHints.cycle": true,
    "editor.parameterHints.enabled": true,
    "editor.pasteAs.showPasteSelector": "never",
    "editor.quickSuggestionsDelay": 250,
    "editor.renderLineHighlight": "line",
    "editor.renderLineHighlightOnlyWhenFocus": true,
    "editor.renderWhitespace": "trailing",
    "editor.scrollbar.verticalScrollbarSize": 15,
    "editor.snippetSuggestions": "none",
    "editor.stickyScroll.enabled": true,
    "editor.suggest.localityBonus": true,
    "editor.suggest.selectionMode": "whenTriggerCharacter",
    "editor.suggest.shareSuggestSelections": true,
    "editor.suggest.showKeywords": false,
    "editor.suggest.showWords": false,
    "editor.suggestSelection": "recentlyUsed",
    "editor.tabSize": 4,
    "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?_",
    "errorLens.fontSize": "12",
    "errorLens.fontWeight": "bold",
    "errorLens.gutterIconsEnabled": false,
    "errorLens.margin": "1ch",
    "errorLens.replaceLinebreaksSymbol": " ⏎",
    "explorer.compactFolders": true,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "explorer.copyRelativePathSeparator": "/",
    "explorer.decorations.badges": false,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": false,
    "explorer.incrementalNaming": "smart",
    "extensions.autoCheckUpdates": false,
    "extensions.ignoreRecommendations": true,
    "files.hotExit": "onExitAndWindowClose",
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "git.autofetch": true,
    "git.confirmSync": false,
    "git.decorations.enabled": false,
    "git.enableSmartCommit": true,
    "git.fetchOnPull": true,
    "git.inputValidation": "off",
    "git.openRepositoryInParentFolders": "always",
    "git.pruneOnFetch": true,
    "git.terminalGitEditor": true,
    "github.copilot.editor.enableCodeActions": false,
    "github.copilot.editor.iterativeFixing": false,
    "go.inlayHints.assignVariableTypes": true,
    "go.inlayHints.compositeLiteralFields": true,
    "go.inlayHints.compositeLiteralTypes": true,
    "go.inlayHints.parameterNames": true,
    "java.format.settings.url": "A:\\dotfiles\\JavaFormatter.xml",
    "java.implementationsCodeLens.enabled": true,
    "java.referencesCodeLens.enabled": true,
    "javascript.inlayHints.enumMemberValues.enabled": true,
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.inlayHints.parameterNames.enabled": "all",
    "javascript.inlayHints.parameterTypes.enabled": true,
    "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    "javascript.inlayHints.variableTypes.enabled": true,
    "javascript.referencesCodeLens.enabled": true,
    "javascript.referencesCodeLens.showOnAllFunctions": true,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "liveshare.populateGitCoAuthors": "never",
    "Lua.semantic.keyword": true,
    "material-icon-theme.folders.color": "#dcb67a",
    "mypy-type-checker.showNotifications": "always",
    "notebook.lineNumbers": "on",
    "omnisharp.enableDecompilationSupport": true,
    "references.preferredLocation": "view",
    "scm.alwaysShowRepositories": true,
    "scm.countBadge": "focused",
    "scm.defaultViewMode": "tree",
    "scm.defaultViewSortKey": "name",
    "scm.diffDecorations": "none",
    "scm.diffDecorationsGutterAction": "none",
    "scm.diffDecorationsGutterVisibility": "hover",
    "scm.diffDecorationsGutterWidth": 1,
    "scm.diffDecorationsIgnoreTrimWhitespace": "true",
    "scm.providerCountBadge": "auto",
    "security.workspace.trust.banner": "never",
    "security.workspace.trust.enabled": false,
    "smartersemicolon.autoLineChange": false,
    "smartersemicolon.enable": true,
    "sqltools.highlightQuery": false,
    "sqltools.queryParams.enableReplace": true,
    "sqltools.results.reuseTabs": "connection",
    "task.autoDetect": "off",
    "telemetry.telemetryLevel": "crash",
    "terminal.external.windowsExec": "wezterm.exe",
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.defaultProfile.windows": "Nushell",
    "terminal.integrated.persistentSessionReviveProcess": "never",
    "terminal.integrated.shellIntegration.decorationsEnabled": "never",
    "typescript.implementationsCodeLens.enabled": true,
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    "typescript.referencesCodeLens.enabled": true,
    "typescript.referencesCodeLens.showOnAllFunctions": true,
    "typescript.tsserver.experimental.enableProjectDiagnostics": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "update.mode": "start",
    "window.closeWhenEmpty": false,
    "window.dialogStyle": "native",
    "window.openFilesInNewWindow": "off",
    "window.title": "${rootName} - ${activeEditorShort}",
    "window.menuBarVisibility": "hidden",
    "workbench.editor.decorations.badges": false,
    "workbench.editor.decorations.colors": false,
    "workbench.editor.enablePreview": false,
    "workbench.layoutControl.enabled": false,
    "workbench.preferredDarkColorTheme": "IrishBruse's Dark Theme(Green)",
    "workbench.productIconTheme": "material-product-icons",
    "workbench.sideBar.location": "right",
    "workbench.startupEditor": "none",
    "workbench.tree.indent": 12,
    "zenMode.fullScreen": false,
    "zenMode.hideLineNumbers": false,
    "zenMode.restore": false,
    "zenMode.silentNotifications": true,
    "zenMode.showTabs": "none",
    "workbench.activityBar.location": "top",
    "breadcrumbs.filePath": "off",
    "editor.accessibilitySupport": "off",
    "editor.defaultColorDecorators": true,
    "editor.scrollbar.ignoreHorizontalScrollbarInContentHeight": true,
    "errorLens.scrollbarHackEnabled": true,
    "errorLens.messageMaxChars": 80,
    "jupyter.askForKernelRestart": false,
    "workbench.editor.limit.value": 10,
    "explorer.openEditors.visible": 8,
    "workbench.editor.limit.enabled": true,
    "editor.fontVariations": true,
    "thunder-client.indentSize": 4,
    "thunder-client.sidebar.defaultTab": "Collections",
    "thunder-client.sidebar.layout": "compact",
    "breadcrumbs.enabled": false,
    "java.codeGeneration.useBlocks": true,
    "security.promptForLocalFileProtocolHandling": false,
    "security.allowedUNCHosts": [
        "src",
        "192.168.15.30"
    ],
    "workbench.colorTheme": "IrishBruse's Dark Theme(Green)",
    "[scss]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "workbench.iconTheme": "material-icon-theme",
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "editor.semanticHighlighting.enabled": true,
    "js/ts.implicitProjectConfig.checkJs": true,
    "[sql]": {
        "editor.defaultFormatter": "mtxr.sqltools"
    },
    "remoteHub.commitDirectlyWarning": "off",
    "editor.inlineSuggest.suppressSuggestions": true,
    "cody.commandCodeLenses": false,
    "editor.pasteAs.enabled": false,
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "java.jdt.ls.java.home": "C:\\Program Files\\Java\\jdk-21",
    "java.configuration.runtimes": [
        {
            "default": true,
            "name": "JavaSE-21",
            "path": "C:\\Program Files\\Java\\jdk-21"
        }
    ],
    "java.maven.downloadSources": true,
    "cody.codeActions.enabled": false,
    "errorLens.multilineMessage": {
        "preferSameLineMultiplier": "0"
    },
    "problems.defaultViewMode": "table",
    "problems.sortOrder": "position",
    "explorer.sortOrder": "type",
    "explorer.autoReveal": "focusNoScroll",
    "dotnet.backgroundAnalysis.analyzerDiagnosticsScope": "fullSolution",
    "dotnet.backgroundAnalysis.compilerDiagnosticsScope": "fullSolution",
}
