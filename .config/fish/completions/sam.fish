complete --command sam -f

complete --command sam -x -n __fish_use_subcommand -a docs      --description "Launch the AWS SAM CLI documentation in a browser"
complete --command sam -x -n __fish_use_subcommand -a init      --description "Initialize an AWS SAM application"
complete --command sam -x -n __fish_use_subcommand -a build     --description "Build your AWS serverless function code"
complete --command sam -x -n __fish_use_subcommand -a local     --description "Run your AWS serverless function locally"
complete --command sam -x -n __fish_use_subcommand -a validate  --description "Validate an AWS SAM template"
complete --command sam -x -n __fish_use_subcommand -a remote    --description "Invoke or send an event to cloud resources in your AWSCloudformation stack"
complete --command sam -x -n __fish_use_subcommand -a package   --description "Package an AWS SAM application"
complete --command sam -x -n __fish_use_subcommand -a deploy    --description "Deploy an AWS SAM application"
complete --command sam -x -n __fish_use_subcommand -a logs      --description "Fetch AWS Cloudwatch logs for AWS Lambda Functions or Cloudwatch Log groups"
complete --command sam -x -n __fish_use_subcommand -a traces    --description "Fetch AWS X-Ray traces"
complete --command sam -x -n __fish_use_subcommand -a list      --description "Fetch the state of your AWS serverless application"
complete --command sam -x -n __fish_use_subcommand -a delete    --description "Delete an AWS SAM application and the artifacts created by sam deploy"
complete --command sam -x -n __fish_use_subcommand -a pipeline  --description "Manage the continuous delivery of your AWS serverless application"
complete --command sam -x -n __fish_use_subcommand -a publish   --description "Publish a packaged AWS SAM template to AWS Serverless Application Repository for easy sharing"

# sync
complete --command sam -x -n __fish_use_subcommand -a sync -r      --description "Sync an AWS SAM project to AWS"

complete --command sam -f -r -n "__fish_seen_subcommand_from sync" -l stack-name -k                                 --description "Name of the AWS CloudFormation stack. [required]"

complete --command sam -f -n "__fish_seen_subcommand_from sync" -s t -l template -l template-file                   --description "AWS SAM template file. [default: template.[yaml|yml|json]]"
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l region                                           --description "Set the AWS Region of the service. (e.g. us-east-1)"
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l profile                                          --description "Select a specific profile from your credential file to get AWS credentials."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l parameter-overrides                              --description "String that contains AWS CloudFormation parameter overrides encoded as key=value pairs."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l capabilities                                     --description "List of capabilities that one must specify before AWS Cloudformation can create certain stacks."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l s3-bucket                                        --description "AWS S3 bucket where artifacts referenced in the template are uploaded."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l s3-prefix                                        --description "Prefix name that is added to the artifact's name when it is uploaded to the AWS S3 bucket."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l image-repository                                 --description "AWS ECR repository URI where artifacts referenced in the template are uploaded."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l image-repositories                               --description "Mapping of Function Logical ID to AWS ECR Repository URI."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l role-arn                                         --description "ARN of an IAM role that AWS Cloudformation assumes when executing a deployment change set."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l kms-key-id                                       --description "The ID of an AWS KMS key that is used to encrypt artifacts that are at rest in the AWS S3 bucket."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l notification-arns                                --description "ARNs of SNS topics that AWS Cloudformation associates with the stack."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l tags                                             --description "List of tags to associate with the stack."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l metadata                                         --description "Map of metadata to attach to ALL the artifacts that are referenced in the template."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -s bi, -l build-image                               --description "Container image URIs for building functions/layers. You can specify for all functions/layers with just the image URI (-l build-image public.ecr.aws/sam/build-nodejs18.x:latest)"
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l config-env                                       --description "Environment name specifying default parameter values in the configuration file. [default: default]"
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l config-file                                      --description "Configuration file containing default parameter values.  [default: samconfig.toml]"
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l save-params                                      --description "Save the parameters provided via the command line to the configuration file."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l watch -l no-watch                                --description "Watch local files and automatically sync with cloud."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l code                                             --description "Sync ONLY code resources. This includes Lambda Functions, API Gateway, and Step Functions."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l skip-deploy-sync -l no-skip-deploy-sync          --description "This option will skip the initial infrastructure deployment if it is not required by comparing the local template with the template deployed in cloud."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l dependency-layer -l no-dependency-layer          --description "Separate dependencies of individual function into a Lambda layer for improved performance."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -s u, -l use-container                              --description "Build functions within an AWS Lambda-like container."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l resource-id                                      --description "Sync code for all the resources with the ID. To sync a resource within a nested stack, use the following pattern {ChildStack}/{logicalId}."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l resource                                         --description "Sync code for all resources of the given resource type."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -s s, -l base-dir                                   --description "Resolve relative paths to function's source code with respect to this directory. Use this if SAM template and source code are not in same enclosing folder. By default, relative paths are resolved with respect to the SAM template's location."
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l build-in-source -l no-build-in-source            --description "Opts in to build project in the source folder. The following workflows support building in source: ['nodejs16.x', 'nodejs18.x', 'nodejs20.x', 'Makefile', 'esbuild']"
complete --command sam -f -n "__fish_seen_subcommand_from sync" -l watch-exclude                                    --description "Excludes a file or folder from being observed for file changes."


# Global
complete --command sam -x -l beta-features -l no-beta-features      --description "Enable/Disable beta features"
complete --command sam -x -l debug              --description "Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps"
complete --command sam -x -l version            --description "Show the version and exit"
complete --command sam -x -l info               --description "Show system and dependencies information"
complete --command sam -x -l help -s h          --description "Show this message and exit"
